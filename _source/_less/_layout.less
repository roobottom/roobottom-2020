.wrapper {
  max-width: @break-max-rem;
  margin: 0 auto;
  padding-left: var(--site-padding);
  padding-right: var(--site-padding);
  //box-sizing: border-box;
}

.space(@direction, @distance: 1, @prop: margin) when not (@direction = all) {
  @{prop}-@{direction}: ~"calc(@{distance} * var(--space))";
}

.space(@direction, @distance: 1, @prop: margin) when (@direction = all) {
  @{prop}: ~"calc(@{distance} * var(--space))";
}

.peek-calc(@distance, @prop) {
  .break-max({
    @{prop}: unit(-1 * (@distance * 30) / @base, rem);
  });
}
.peek(@direction, @distance: 1) when (@direction = both) {
  .peek-calc(@distance, margin-left);
  .peek-calc(@distance, margin-right);
}
.peek(@direction, @distance: 1) when (@direction = start) {
  .peek-calc(@distance, margin-left);
}

.peek(@direction, @distance: 1) when (@direction = end) {
  .peek-calc(@distance, margin-right);
}

.layout-like-article {
  margin-left: auto;
  margin-right: auto;
  max-width: var(--max-text-width);
}