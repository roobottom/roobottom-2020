//general teaser styling 
.teaser {
  position: relative;

  &-title {
    #type > #size > .h2;
    #type > #font > .serif;
  }

  &-link {
    .space(bottom);
    text-decoration: none;
    color: var(--c-text);
    &:before {
      content: "";
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      position: absolute;
      z-index: 2;
    }
    &:focus {
      outline: 3px solid var(--c-first);
    }
  }
  
  &-introduction {
    #type > #size > .p;
    max-width: var(--max-text-width);
  }
  &-cover {
    width: 100%;
    background-repeat: no-repeat;
    background-position: center center;
    background-size: cover;
    &-image {
      display: block;
      max-width: 100%;
    }
  }
  &-date {
    #type > #size > .small;
  }
}

//< min
.break-base({
  @teaser-padding: 30;
  .teasers {
    display: flex;
    overflow-x: scroll;
    width: 100vw;
    margin-left: unit(-1 * @teaser-padding/@base,rem);
    margin-right: unit(-1 * @teaser-padding/@base,rem);
    padding-left: var(--space);
    padding-right: var(--space);
    padding-bottom: var(--space);
    box-sizing: border-box;
    .space(bottom,2);
  
    //no idea why this works
    //but it stops the last item hitting the end
    //of the scrollable area
    &:after {
      content: "";
      display: block;
      flex: 1 0 1px;
    }
  }
  .teaser {
    background-color: var(--c-background-tint);
    flex: 1 0 70vw;
    max-width: unit(260/@base,rem);
    margin-right: unit(@teaser-padding/@base,rem);
    border-top: 3px solid var(--c-first);
    display: flex;
    flex-direction: column;

    &-content {
      display: flex;
      flex-direction: column;
      height: 100%;
    }

    &-title {
      .space(top);
    }
    &-title, &-date {
      .space(bottom);
      padding-left: unit(10/@base,rem);
      padding-right: unit(10/@base,rem);
    }
  
    &-introduction {
      display: none;
    }

    &-date {
      margin-top: auto;
      #type > #size > .p;
    }

  }
});


//> min
.break-min({
  .teaser {

    &-title,
    &-date {
      .space(bottom);
      display: block;
    }

    &-cover-container {
      position: relative;
      background-color: var(--c-first);
    }
    @supports (mix-blend-mode: color) {
      &-cover-container:after {
        content: "";
        display: block;
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        background-color: var(--c-first);
        mix-blend-mode: color;
      }
    }
    
    &-cover-image {
      display: block;
    }

    //hover state
    &:hover {
      background-color: var(--c-background-tint);
    }

    //colours
    &:nth-of-type(4n-2) &-cover-container {
      background-color: var(--c-second);
      &:after {
        background-color: var(--c-second);
      }
    }
    &:nth-of-type(4n-1) &-cover-container {
      background-color: var(--c-third);
      &:after {
        background-color: var(--c-third);
      }
    }
    &:nth-of-type(4n) &-cover-container {
      background-color: var(--c-fourth);
      &:after {
        background-color: var(--c-fourth);
      }
    }
  }
});


//< min > mid
.break-min-only({
  .teaser {
    &-content {
      background-color: var(--c-background);
      transform: translateX(var(--space)) translateY(-50%);
      max-width: var(--max-text-width);
      width: 80%;
      padding: var(--space);
      border: 6px solid var(--c-first);
    }

    &:nth-of-type(4n-2) &-content {
      border-color: var(--c-second)
    }
    &:nth-of-type(4n-1) &-content {
      border-color: var(--c-third)
    }
    &:nth-of-type(4n) &-content {
      border-color: var(--c-fourth)
    }

  }

});

//> mid
.break-mid({
  .teaser {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    column-gap: var(--space);
    .space(bottom,5);
    .space(top,5);
    .space(all,.5,padding);
    border: 1px solid var(--c-background-tint);

    &-content {
      grid-column: 1;
    }

    &-cover {
      grid-column: 2;
      grid-row: 1;
    }
    &-cover-container:after {
      top: var(--space);
      left: var(--space);
    }

    //reverse direction
    &:nth-of-type(2n) &-content {
      grid-column: 2;
    }
    &:nth-of-type(2n) &-cover {
      grid-column: 1;
      &-container:after {
        left: calc(-1 * var(--space));
      }
    }

  }
});